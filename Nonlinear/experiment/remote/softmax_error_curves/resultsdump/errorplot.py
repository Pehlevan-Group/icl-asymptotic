import numpy as np
import matplotlib.pyplot as plt
import sys

mydir = sys.argv[1]
d = int(sys.argv[2])
experimentdata = []
for i in range(26):
    file_path = f'./{mydir}/error-{i}.txt'
    # Read the numbers from the file and convert them to floats
    with open(file_path, 'r') as file:
        numbers = [float(line.strip()) for line in file if line.strip()]
    experimentdata.append(numbers)
for i in range(39,61):
    file_path = f'./{mydir}/error-{i}.txt'
    # Read the numbers from the file and convert them to floats
    with open(file_path, 'r') as file:
        numbers = [float(line.strip()) for line in file if line.strip()]
    experimentdata.append(numbers)
#experimentdata = np.array(experimentdata)
#print([list(i) for i in experimentdata])
# taus = np.array([0.5,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,2,2.5,3,5,7,10])[:14]
# ar40_14 = np.array([[2.6023108959198, 2.254554033279419, 2.3578929901123047, 2.365234613418579, 2.3919875621795654], [2.532776355743408, 2.632019281387329, 2.9205522537231445, 3.0767769813537598, 3.263913631439209], [2.9938747882843018, 3.4875104427337646, 3.4828484058380127, 3.7137277126312256, 3.3197970390319824], [4.53316068649292, 3.8280651569366455, 3.599116563796997, 4.275094985961914, 3.7537589073181152], [5.490716457366943, 5.706916809082031, 5.9682135581970215, 5.557855606079102, 4.82590913772583], [8.540902137756348, 9.850943565368652, 9.8276948928833, 7.452513217926025, 9.802535057067871], [15.348734855651855, 11.570633888244629, 13.046859741210938, 16.848148345947266, 13.666263580322266], [8.493037223815918, 7.10896635055542, 9.352099418640137, 7.154389381408691, 9.944311141967773], [6.644514560699463, 6.023464679718018, 5.859210014343262, 6.839303493499756, 5.901430606842041], [5.004908084869385, 5.914784908294678, 4.98831033706665, 3.6546270847320557, 3.966808795928955], [3.069544553756714, 3.071014881134033, 2.365328073501587, 2.923194169998169, 4.144570827484131], [1.3658015727996826, 1.4078837633132935, 1.3001948595046997, 1.5264066457748413, 1.3517885208129883], [1.0327680110931396, 1.0239278078079224, 1.0031344890594482, 1.018096923828125, 1.0088270902633667], [0.8847051858901978, 0.8775529265403748, 0.8666092157363892, 0.9036922454833984, 0.8679669499397278]])
# ar20_14 = np.array([[2.9062163829803467, 2.2754127979278564, 1.9847791194915771, 2.24310564994812, 2.2531774044036865], [2.9500417709350586, 3.017025947570801, 3.0661983489990234, 2.6269407272338867, 2.3949756622314453], [2.734025001525879, 3.192457675933838, 3.9195914268493652, 2.9441511631011963, 2.9627633094787598], [3.5635297298431396, 2.7771036624908447, 3.7324154376983643, 2.883497953414917, 3.8456647396087646], [5.4376606941223145, 4.761256694793701, 4.455544471740723, 4.692875862121582, 4.328115463256836], [6.895664215087891, 6.2264227867126465, 4.927656650543213, 7.1644110679626465, 5.119468688964844], [8.83810043334961, 6.995192050933838, 7.904427528381348, 8.932870864868164, 8.873292922973633], [11.92676067352295, 11.447528839111328, 17.021238327026367, 10.236629486083984, 11.651045799255371], [9.799042701721191, 10.481451034545898, 10.932585716247559, 7.754958152770996, 9.58895206451416], [7.214998722076416, 6.599148273468018, 8.951101303100586, 6.567244052886963, 5.545844554901123], [4.959431171417236, 5.098135948181152, 4.230360507965088, 4.609433650970459, 6.309449672698975], [1.8140617609024048, 2.240433692932129, 3.1813955307006836, 2.4810447692871094, 2.3843579292297363], [1.932372808456421, 1.1624127626419067, 2.258294105529785, 1.2005141973495483, 1.3038829565048218], [0.9982557892799377, 1.029316782951355, 1.0299745798110962, 1.4841887950897217, 1.9276036024093628]])

inds = list(range(26))+list(range(39,61))
taus = np.linspace(0.1,6.1,61)[inds]
#np.array([0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95,1,1.05,1.1,1.15,1.2,1.25,1.3,1.35,1.4,1.45,1.5,2,2.5,3,5])[:25]

means = np.array([np.mean(experimentdata[i]) for i in range(len(experimentdata))]);
stds = np.array([np.std(experimentdata[i]) for i in range(len(experimentdata))]);
plt.plot(taus,means,label=f'd = {d}')
plt.fill_between(taus,means-stds,means+stds,alpha=0.2)
#plt.fill_between(taus,np.mean(experimentdata,axis=1)-np.std(experimentdata,axis=1),np.mean(experimentdata,axis=1)+np.std(experimentdata,axis=1),alpha=0.2)
#plt.plot(np.linspace(taus[0],taus[-1],1000),[icl_theory(tau,1,0.01,10000) for tau in np.linspace(taus[0],taus[-1],1000)],'-',label='theory')
# plt.plot(taus, np.mean(ar40_14,axis=1),label=f'40')
# plt.plot(taus, np.mean(ar20_14,axis=1),label=f'20')
plt.legend()

plt.savefig(f'{mydir}/plot{d}.png')

